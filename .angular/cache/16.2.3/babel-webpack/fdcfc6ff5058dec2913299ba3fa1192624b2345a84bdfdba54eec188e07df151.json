{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nexport let PaginationComponent = class PaginationComponent {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.currentPage = 1;\n  }\n  ngOnInit() {\n    if (this.items) {\n      const pagesNumber = this.getNumPages();\n      console.log(pagesNumber);\n      this.pages = Array.from({\n        length: pagesNumber\n      }, (_, index) => index + 1);\n      console.log(this.pages);\n    }\n  }\n  getNumPages() {\n    return Math.ceil(this.items / 100);\n  }\n  prevPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.change(this.currentPage);\n    }\n  }\n  nextPage() {\n    if (this.items) {\n      this.pages = this.getNumPages(); // Cards on display limit\n      if (this.currentPage < this.pages) {\n        this.currentPage++;\n      }\n      this.change(this.currentPage);\n    }\n  }\n  change(page) {\n    if (page < 1) page = 1;\n    if (page > this.getNumPages()) page = this.getNumPages();\n    if (page == 1) {\n      this.renderer.setStyle(this.btnPrev, \"visibility\", \"hidden\");\n    } else {\n      this.renderer.setStyle(this.btnPrev, \"visibility\", \"visible\");\n    }\n    if (page == this.getNumPages()) {\n      this.renderer.setStyle(this.btnNext, \"visibility\", \"hidden\");\n    } else {\n      this.renderer.setStyle(this.btnNext, \"visibility\", \"visible\");\n    }\n  }\n};\n__decorate([ViewChild('btnPrev')], PaginationComponent.prototype, \"btnPrev\", void 0);\n__decorate([ViewChild('btnNext')], PaginationComponent.prototype, \"btnNext\", void 0);\n__decorate([Input()], PaginationComponent.prototype, \"items\", void 0);\nPaginationComponent = __decorate([Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.sass']\n})], PaginationComponent);","map":{"version":3,"names":["Component","Input","ViewChild","PaginationComponent","constructor","renderer","currentPage","ngOnInit","items","pagesNumber","getNumPages","console","log","pages","Array","from","length","_","index","Math","ceil","prevPage","change","nextPage","page","setStyle","btnPrev","btnNext","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/lyhn/Documents/Proyectos/marvel-comics/src/app/components/pagination/pagination.component.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  Renderer2 \n} from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.sass']\n})\nexport class PaginationComponent implements OnInit{\n  @ViewChild('btnPrev') btnPrev!: ElementRef;\n  @ViewChild('btnNext') btnNext!: ElementRef;\n  @Input() public items!: number;\n  public pages: any;\n  public currentPage = 1;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit (): void {\n    if (this.items){\n      const pagesNumber = this.getNumPages()\n      console.log(pagesNumber)\n      this.pages = Array.from({ length: pagesNumber }, (_, index) => index + 1);\n      console.log(this.pages)\n    }\n  }\n  getNumPages () {\n    return Math.ceil(this.items / 100);\n  }  \n  prevPage () {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.change(this.currentPage);\n    }\n  }\n\n  nextPage () {\n    if (this.items){ \n      this.pages = this.getNumPages() // Cards on display limit\n      if (this.currentPage < this.pages) {\n        this.currentPage++;\n      }\n      this.change(this.currentPage);\n    }\n  }\n\n  change(page: number) {\n    if (page < 1) page = 1;\n    if (page > this.getNumPages()) page = this.getNumPages();\n    if (page == 1) {\n        this.renderer.setStyle(this.btnPrev, \"visibility\", \"hidden\");\n    } else {\n      this.renderer.setStyle(this.btnPrev, \"visibility\", \"visible\");\n    }\n    if (page == this.getNumPages()) {\n      this.renderer.setStyle(this.btnNext, \"visibility\", \"hidden\");\n    } else {\n      this.renderer.setStyle(this.btnNext, \"visibility\", \"visible\");\n    }\n  }\n}\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,KAAK,EAGLC,SAAS,QAEJ,eAAe;AAOf,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAO9BC,YAAoBC,QAAmB;IAAnB,KAAAA,QAAQ,GAARA,QAAQ;IAFrB,KAAAC,WAAW,GAAG,CAAC;EAEoB;EAE1CC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACC,KAAK,EAAC;MACb,MAAMC,WAAW,GAAG,IAAI,CAACC,WAAW,EAAE;MACtCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;MACxB,IAAI,CAACI,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEP;MAAW,CAAE,EAAE,CAACQ,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;MACzEP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;;EAE3B;EACAH,WAAWA,CAAA;IACT,OAAOS,IAAI,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,GAAG,GAAG,CAAC;EACpC;EACAa,QAAQA,CAAA;IACN,IAAI,IAAI,CAACf,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACA,WAAW,EAAE;MAClB,IAAI,CAACgB,MAAM,CAAC,IAAI,CAAChB,WAAW,CAAC;;EAEjC;EAEAiB,QAAQA,CAAA;IACN,IAAI,IAAI,CAACf,KAAK,EAAC;MACb,IAAI,CAACK,KAAK,GAAG,IAAI,CAACH,WAAW,EAAE,EAAC;MAChC,IAAI,IAAI,CAACJ,WAAW,GAAG,IAAI,CAACO,KAAK,EAAE;QACjC,IAAI,CAACP,WAAW,EAAE;;MAEpB,IAAI,CAACgB,MAAM,CAAC,IAAI,CAAChB,WAAW,CAAC;;EAEjC;EAEAgB,MAAMA,CAACE,IAAY;IACjB,IAAIA,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC;IACtB,IAAIA,IAAI,GAAG,IAAI,CAACd,WAAW,EAAE,EAAEc,IAAI,GAAG,IAAI,CAACd,WAAW,EAAE;IACxD,IAAIc,IAAI,IAAI,CAAC,EAAE;MACX,IAAI,CAACnB,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACC,OAAO,EAAE,YAAY,EAAE,QAAQ,CAAC;KAC/D,MAAM;MACL,IAAI,CAACrB,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACC,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC;;IAE/D,IAAIF,IAAI,IAAI,IAAI,CAACd,WAAW,EAAE,EAAE;MAC9B,IAAI,CAACL,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACE,OAAO,EAAE,YAAY,EAAE,QAAQ,CAAC;KAC7D,MAAM;MACL,IAAI,CAACtB,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACE,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC;;EAEjE;CACD;AAlDuBC,UAAA,EAArB1B,SAAS,CAAC,SAAS,CAAC,C,mDAAsB;AACrB0B,UAAA,EAArB1B,SAAS,CAAC,SAAS,CAAC,C,mDAAsB;AAC3B0B,UAAA,EAAf3B,KAAK,EAAE,C,iDAAuB;AAHpBE,mBAAmB,GAAAyB,UAAA,EAL/B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW5B,mBAAmB,CAmD/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}